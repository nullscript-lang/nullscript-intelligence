{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "NullScript",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#brackets"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.nullscript",
          "match": "\\b(run|whatever|otherwise|since|when|switch|case|done|stop|keepgoing|share|bring|fresh)\\b"
        },
        {
          "name": "keyword.declaration.nullscript",
          "match": "\\b(fixed|let|var)\\b"
        },
        {
          "name": "keyword.operator.logical.nullscript",
          "match": "\\b(more|less|moreeq|lesseq|is|isnot|yes|no)\\b"
        },
        {
          "name": "constant.language.nullscript",
          "match": "\\b(null|undefined|yes|no|true|false)\\b"
        },
        {
          "name": "keyword.other.nullscript",
          "match": "\\b(return|speak|clock|this|super|class|extends|static|async|await)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.nullscript",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.nullscript",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.nullscript",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.nullscript",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.template.nullscript",
          "begin": "`",
          "end": "`",
          "patterns": [
            {
              "name": "meta.embedded.expression.nullscript",
              "begin": "\\$\\{",
              "end": "\\}",
              "patterns": [
                {
                  "include": "#keywords"
                },
                {
                  "include": "#numbers"
                },
                {
                  "include": "#variables"
                }
              ]
            },
            {
              "name": "constant.character.escape.nullscript",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.nullscript",
          "begin": "//",
          "end": "$"
        },
        {
          "name": "comment.block.nullscript",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.nullscript",
          "match": "\\b(?:0[xX][0-9a-fA-F]+|0[bB][01]+|0[oO][0-7]+|\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.assignment.nullscript",
          "match": "=|\\+=|\\-=|\\*=|\\/=|\\%=|\\&=|\\|=|\\^=|<<=|>>="
        },
        {
          "name": "keyword.operator.arithmetic.nullscript",
          "match": "\\+|\\-|\\*|\\/|\\%|\\+\\+|\\-\\-"
        },
        {
          "name": "keyword.operator.comparison.nullscript",
          "match": "==|!=|===|!==|<|>|<=|>="
        },
        {
          "name": "keyword.operator.logical.nullscript",
          "match": "&&|\\|\\||!"
        },
        {
          "name": "keyword.operator.bitwise.nullscript",
          "match": "&|\\||\\^|~|<<|>>"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.nullscript",
          "match": "\\b(run)\\s+([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*\\(",
          "captures": {
            "1": {
              "name": "keyword.control.nullscript"
            },
            "2": {
              "name": "entity.name.function.nullscript"
            }
          }
        },
        {
          "name": "meta.function.call.nullscript",
          "match": "\\b([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*\\(",
          "captures": {
            "1": {
              "name": "entity.name.function.nullscript"
            }
          }
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.other.nullscript",
          "match": "\\b[a-zA-Z_$][a-zA-Z0-9_$]*\\b"
        }
      ]
    },
    "brackets": {
      "patterns": [
        {
          "name": "meta.brace.round.nullscript",
          "match": "[()]"
        },
        {
          "name": "meta.brace.square.nullscript",
          "match": "[\\[\\]]"
        },
        {
          "name": "meta.brace.curly.nullscript",
          "match": "[{}]"
        }
      ]
    }
  },
  "scopeName": "source.nullscript"
}
